---
name: Release

env:
  GH_USER: jonaslagoni
  GH_EMAIL: <jonas-lt@live.dk>

on:
  push:
    branches:
      - main
      # below lines are not enough to have release supported for these branches
      # make sure configuration of `semantic-release` package mentions these branches
      - next
      - '**-release'

jobs:
  # Add required jobs that need to go through before releasing
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Set git to use LF #to once and for all finish neverending fight between Unix and Windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: npm install
      - name: Test
        run: npm test
      - name: Run linter
        run: npm run lint
      - name: Run release assets generation to make sure PR does not break it
        run: npm run generate:assets
  release:
    # TODO: make sure to require other jobs to successfully complete before releasing
    needs: test
    name: semantic release pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Set git to use LF #to once and for all finish neverending fight between Unix and Windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: npm install
      - name: Release to NPM and GitHub
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ env.GH_USER }}
          GIT_AUTHOR_EMAIL: ${{ env.GH_EMAIL }}
          GIT_COMMITTER_NAME: ${{ env.GH_USER }}
          GIT_COMMITTER_EMAIL: ${{ env.GH_EMAIL }}
        run: npm run release
